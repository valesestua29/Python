# -*- coding: utf-8 -*-
"""EjerciciosDeClase.Semana3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16v6lb-2iRiOPJKUF-ek35WxxTjVj3IoX

**EJERCICIO 1**

Rebotes. Una pelota de goma es arrojada desde una altura de 100 metros y cada vez que toca el piso salta 3/5 de la altura desde la que cayó. Escribí un programa/script que imprima una tabla mostrando las alturas que alcanza en cada uno de sus primeros diez rebotes. Debería mostrar algo parecido a esto.

   1   60.0

   2   36.0

   3   21.599999999999998

   4   12.959999999999999

   etc.
"""

altura=100
variacion= 3/5
rebotes=10
i=0

while i<rebotes:
  valorFinal = altura*variacion
  altura=valorFinal

  print(valorFinal)

  i=i+1

"""**EJERCICIO 2**

Jeringoso simple. Usá una iteración sobre el string cadena para agregar la sílaba 'pa', 'pe', 'pi', 'po', o 'pu' según corresponda luego de cada vocal. Podés probar tu código cambiando la cadena inicial por otra palabra, como 'apa' o 'boligoma'.
"""

# jeringoso
cadena = 'Hola Tuti, anda a clase'
capadepenapa = ''

cadena = cadena.lower()
vocales = 'aeiou'

for c in cadena:
    capadepenapa += c
    if c in vocales:
        capadepenapa += 'p' + c
  
print(capadepenapa)

"""**Ejercicio 3**

Meses y días. Crea un programa que pida un número de mes (por ejemplo, el 4) y diga cuántos días tiene (por ejemplo, 30) y el nombre del mes. Debes usar listas. Para simplificarlo vamos a suponer que febrero tiene 28 días.
"""

meses = ['Enero','Febrero','Marzo', 'Abril','Mayo','Junio', 'Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre']
dias = [31,28,31,30,31,30,31,31,30,31,30,31]

nroMes = int(input('Ingrese el nro del mes que desea conocer: '))

nombreMes = meses[nroMes - 1]

cantidadDias = dias[nroMes - 1]

print(f"{nombreMes} tiene {cantidadDias} días.")

"""**Ejercicio 4**

Supongamos que la población del país A es del orden de 75000 habitantes con una tasa de crecimiento anual del 4% y la población del país B es de 230000 habitantes con una tasa de crecimiento del 1,2%. Haz un programa que calcule y escriba el número de años necesarios para que la población del país A supere o iguale a la población del país B, tasas de crecimiento mantenidas.
"""

A = 75000
tasaCrecimientoA = 0.04

B = 230000
tasaCrecimientoB = 0.012

anios = 0

while A < B :
  A += A * tasaCrecimientoA
  B += B * tasaCrecimientoA

  anios = anios+1

print (f'La población del país A superará o igualará a la población del país B en {anios} años.')

"""**Ejercicio 5**

Notas. Las notas obtenidas en por el alumno A durante su cursada fueron: 8, 7, 7, 6, 9, 10, 8, 9. El alumno B obtuvo las siguientes notas: 9, 8, 8, 9, 5, 8, 9, 7. Realizar un programa que calcule la nota media y que muestre quien sacó la nota mayor y quien sacó la nota menor.
"""

notas_alumno_a = [8, 7, 7, 6, 9, 10, 8, 9]
notas_alumno_b = [9, 8, 8, 9, 5, 8, 9, 7]

media_a = sum(notas_alumno_a) / len(notas_alumno_a)
media_b = sum(notas_alumno_b) / len(notas_alumno_b)

max_a = max(notas_alumno_a)
min_a = min(notas_alumno_a)
max_b = max(notas_alumno_b)
min_b = min(notas_alumno_b)

print("Nota media del alumno A:", media_a)
print("Nota máxima del alumno A:", max_a)
print("Nota mínima del alumno A:", min_a)

print("Nota media del alumno B:", media_b)
print("Nota máxima del alumno B:", max_b)
print("Nota mínima del alumno B:", min_b)

if max_a > max_b:
    print("El alumno A obtuvo la nota máxima.")
elif max_b > max_a:
    print("El alumno B obtuvo la nota máxima.")
else:
    print("Ambos alumnos obtuvieron la misma nota máxima.")

if min_a < min_b:
    print("El alumno A obtuvo la nota mínima.")
elif min_b < min_a:
    print("El alumno B obtuvo la nota mínima.")
else:
    print("Ambos alumnos obtuvieron la misma nota mínima.")

"""**Ejercicio 6**

Crea una lista con los números del 1 al 10.
Imprime los elementos en las posiciones 3, 4 y 5 utilizando slices.
Imprime los elementos en las posiciones 2, 4, 6 y 8 utilizando slices.
Crea una nueva lista que contenga los elementos de la lista original en orden inverso utilizando slices.
Reemplaza los elementos en las posiciones 2, 3 y 4 con los números 20, 30 y 40 utilizando slices.
"""

lista = [1,2,3,4,5,6,7,8,9,10]

print(lista[2:5:1])
print(lista[1:9:2])

listaInversa = lista[::-1]
print(listaInversa)

lista[1:4] = [20,30,40]
print(lista)

"""Ejercicio 7 - (opcional)

Supongamos que tenemos una lista de números enteros, y queremos encontrar todas las subsecuencias de la lista que sumen un número objetivo dado. Para hacerlo, vamos a crear una función que tome como argumentos la lista de números y el número objetivo, y devuelva una lista con todas las subsecuencias que suman el número objetivo.

Ayuda: Por ejemplo, si le damos a tu programa la lista de números [1, 2, 3, 4, 5] y queremos encontrar todas las subsecuencias que suman 7 (número objetivo dado), la función debería devolver las siguientes listas [2, 5], [3, 4], [1, 2, 4].
"""

numeros = [1, 2, 3, 4, 5]
combinaciones = [[]]
resultados = []
objetivo = 7

for n in numeros:
    for i in range(len(combinaciones)):
        nueva = combinaciones[i] + [n]
        combinaciones.append(nueva)
        if sum(nueva) == objetivo:
            resultados.append(nueva)

print (f'Resultado: {resultados}')